{"version":3,"sources":["actions/index.js","constants/ActionTypes.js","apikey.js","components/EditModal.js","components/DeleteModal.js","components/MovieCard.js","containers/movies.js","components/Carousel.js","components/AddModal.js","containers/App.js","reducers/index.js","index.js"],"names":["fetchMovieList","titleArray","dispatch","forEach","movieTitle","index","type","requestMovie","fetch","concat","then","response","json","movie","receiveMovie","fetchMovie","editMovie","deleteMovie","addMovie","EditMovieModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","target","value","name","wrap","_context","prev","next","setState","defineProperty","stop","_x","apply","arguments","submitForm","e","preventDefault","areAllInputsValidated","_this$state","state","title","director","runtime","genre","date","Director","Genre","Image","Runtime","Title","Year","id","status","_this$props","movies","findIndex","m","toggle","validate","prop","resetProperties","initialState","modal","titleState","runtimeState","genreState","directorState","dateState","objectSpread","regexToValidate","validateItem","test","_this2","_this$state2","dateRegex","react_default","createElement","reactstrap_es","outline","color","onClick","isOpen","className","onSubmit","form","md","for","valid","invalid","onChange","validateInputs","defaultValue","movieState","Component","connect","DeleteMovieModal","deleteThisMovie","MovieCard","displayTitle","capitalizeFirstLetter","toLowerCase","replace","upperCase","console","log","replaceUnwantedCharacters","str","toUpperCase","find","top","width","src","alt","EditModal","key","DeleteModal","Movies","componentDidMount","filter","map","components_MovieCard","items","altText","caption","DisplayCarousel","onExiting","animating","onExited","nextIndex","activeIndex","length","previous","goToIndex","newIndex","slides","item","captionText","captionHeader","onClickHandler","direction","directionText","AddMovieModal","validateTitle","noDuplicateTitle","Poster","_callee2","_context2","JSON","parse","stringify","size","block","App","Carousel","AddModal","containers_movies","idCounter","rootReducer","combineReducers","undefined","action","_action$movie","updateArray","toConsumableArray","slice","update","addToArray","middleware","thunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","render","es","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.5089ee9c.chunk.js","sourcesContent":["import { \r\n    RECEIVE_MOVIE,  \r\n    REQUEST_MOVIE, EDIT_MOVIE, DELETE_MOVIE, ADD_MOVIE } from '../constants/ActionTypes'\r\nimport { API_KEY } from '../apikey'\r\n\r\nexport const requestMovie = (movieTitle, index) =>({\r\n    type: REQUEST_MOVIE,\r\n    movieTitle,\r\n    index: index\r\n})\r\n\r\nexport const receiveMovie = (movieTitle, index, json)=>({\r\n    type: RECEIVE_MOVIE,\r\n    movieTitle,\r\n    movie: json,\r\n    index: index\r\n})\r\n\r\nexport const fetchMovie = (movieTitle, index) => dispatch =>{\r\n    dispatch(requestMovie(movieTitle, index))\r\n   return fetch(`http://www.omdbapi.com/?t=${movieTitle}&apikey=${API_KEY}`)\r\n   .then(response => response.json())\r\n   .then(json => dispatch(receiveMovie(movieTitle, index, json)))\r\n}\r\n\r\nexport const fetchMovieList = titleArray => dispatch => {\r\n    titleArray.forEach((movieTitle, index) => {\r\n        dispatch(fetchMovie(movieTitle, index))\r\n    });\r\n}\r\n\r\nexport const editMovie=(movie, index)=>({\r\n    type: EDIT_MOVIE,\r\n    index: index,\r\n    movie: movie\r\n})\r\n\r\nexport const deleteMovie = (index)=>({\r\n    type: DELETE_MOVIE,\r\n    index: index\r\n})\r\n\r\nexport const addMovie = (movie, index)=>({\r\n    type: ADD_MOVIE,\r\n    movie: movie,\r\n    index: index\r\n})","export const REQUEST_MOVIE = 'REQUEST_MOVIE'\r\nexport const RECEIVE_MOVIE = 'RECEIVE_MOVIE'\r\nexport const EDIT_MOVIE = 'EDIT_MOVIE'\r\nexport const DELETE_MOVIE = 'DELETE_MOVIE'\r\nexport const ADD_MOVIE = 'ADD_MOVIE'","export const API_KEY = '19f0c11f'\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { editMovie } from '../actions'\r\nimport {\r\n  Button, Modal, ModalHeader, ModalBody,\r\n  ModalFooter, Form, FormGroup, FormFeedback,\r\n  Label, Input, Row, Col\r\n} from 'reactstrap';\r\n\r\nclass EditMovieModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      modal: false,\r\n      title: this.props.movie.Title,\r\n      director: this.props.movie.Director,\r\n      runtime: this.props.movie.Runtime,\r\n      date: `01-01-${this.props.movie.Year}`,\r\n      genre: this.props.movie.Genre,\r\n      validate: {\r\n        titleState: '',\r\n        runtimeState: '',\r\n        genreState: '',\r\n        directorState: '',\r\n        dateState: ''\r\n      }\r\n    };\r\n    this.state = { ...this.initialState }\r\n  }\r\n  validateInputs(e, regexToValidate, validateItem) {\r\n    const { validate } = this.state\r\n    if (regexToValidate.test(e.target.value)) {\r\n      validate[validateItem] = 'has-success'\r\n    } else {\r\n      validate[validateItem] = 'has-danger'\r\n    }\r\n    this.setState({ validate })\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    const { target } = event;\r\n    const value = target.value;\r\n    const { name } = target;\r\n    await this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n  submitForm = (e) => {\r\n    e.preventDefault();\r\n    if (this.areAllInputsValidated()) {\r\n      const { title, director, runtime, genre, date } = this.state;\r\n      let movie = {\r\n        Director: director,\r\n        Genre: genre,\r\n        Image: this.props.movie.Image,\r\n        Runtime: runtime,\r\n        Title: title,\r\n        Year: date,\r\n        id: this.props.movie.id,\r\n        status: true\r\n      }\r\n      const { dispatch, movies } = this.props;\r\n      const index = movies.findIndex(m => m.id === movie.id);\r\n      dispatch(editMovie(movie, index));\r\n      this.toggle()\r\n    }\r\n  }\r\n\r\n  areAllInputsValidated = () => {\r\n    const { validate } = this.state\r\n    for (const prop in validate) {\r\n      if (validate[prop] !== 'has-success' && validate[prop] !== '') {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  resetProperties = () => {\r\n    this.setState(this.initialState)\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  }\r\n  render() {\r\n    const { title, director, runtime, genre, date } = this.state\r\n    const dateRegex = /^(0[1-9]|[12]\\d|3[01])-(0[1-9]|1[0-2])-(19|20)\\d{2}$/\r\n    return (\r\n      <div>\r\n        <Button outline color=\"danger\" onClick={this.toggle}>Edit Movie</Button>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle} >\r\n          <ModalHeader toggle={this.toggle}>Edit Movie</ModalHeader>\r\n          <Form className=\"form\" onSubmit={(e) => this.submitForm(e)}>\r\n            <ModalBody>\r\n\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"movieTitle\">Title</Label>\r\n                    <Input type=\"text\" name=\"title\" id=\"movieTitle\" value={title}\r\n                      valid={this.state.validate.titleState === 'has-success'}\r\n                      invalid={this.state.validate.titleState === 'has-danger'}\r\n                      onChange={(e) => {\r\n                        this.validateInputs(e, /[A-Za-z]/g, 'titleState')\r\n                        this.handleChange(e)\r\n                      }} />\r\n                    <FormFeedback valid>\r\n                      Your title is in the correct format.\r\n                    </FormFeedback>\r\n                    <FormFeedback invalid>\r\n                      Your title contains no letters and is therefore invalid.\r\n                    </FormFeedback>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"movieRuntime\">Runtime</Label>\r\n                    <Input type=\"text\" name=\"runtime\" id=\"movieRuntime\" value={runtime}\r\n                      valid={this.state.validate.runtimeState === 'has-success'}\r\n                      invalid={this.state.validate.runtimeState === 'has-danger'}\r\n                      onChange={(e) => {\r\n                        this.validateInputs(e, /^\\d{1,3}\\smin$/, 'runtimeState')\r\n                        this.handleChange(e)\r\n                      }} />\r\n                    <FormFeedback valid>\r\n                      Your runtime is in the correct format.\r\n                    </FormFeedback>\r\n                    <FormFeedback invalid>\r\n                      Your runtime must be a number followed by a space and the letters 'min'.\r\n                     </FormFeedback>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"movieDirector\">Director</Label>\r\n                    <Input type=\"text\" name=\"director\" id=\"movieDirector\" value={director}\r\n                      valid={this.state.validate.directorState === 'has-success'}\r\n                      invalid={this.state.validate.directorState === 'has-danger'}\r\n                      onChange={(e) => {\r\n                        this.validateInputs(e, /[A-Za-z]/g, 'directorState')\r\n                        this.handleChange(e)\r\n                      }} />\r\n                    <FormFeedback valid>\r\n                      Your director is in the correct format.\r\n                    </FormFeedback>\r\n                    <FormFeedback invalid>\r\n                      Your director contains no letters and is therefore invalid.\r\n                     </FormFeedback>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"movieGenre\">Genre</Label>\r\n                    <Input type=\"text\" name=\"genre\" id=\"movieGenre\" value={genre}\r\n                      valid={this.state.validate.genreState === 'has-success'}\r\n                      invalid={this.state.validate.genreState === 'has-danger'}\r\n                      onChange={(e) => {\r\n                        this.validateInputs(e, /[A-Za-z]/g, 'genreState')\r\n                        this.handleChange(e)\r\n                      }} />\r\n                    <FormFeedback valid>\r\n                      Your genre is in the correct format.\r\n                    </FormFeedback>\r\n                    <FormFeedback invalid>\r\n                      Your genre contains no letters and is therefore invalid.\r\n                     </FormFeedback>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={12}>\r\n                  <FormGroup>\r\n                    <Label for=\"movieDate\">Released</Label>\r\n                    <Input type=\"text\" name=\"date\" id=\"movieDate\" defaultValue={date}\r\n                      valid={this.state.validate.movieState === 'has-success'}\r\n                      invalid={this.state.validate.movieState === 'has-danger'}\r\n                      onChange={(e) => {\r\n                        this.validateInputs(e, dateRegex, 'movieState')\r\n                        this.handleChange(e)\r\n                      }} />\r\n                    <FormFeedback valid>\r\n                      Your date is in the correct format.\r\n                    </FormFeedback>\r\n                    <FormFeedback invalid>\r\n                      Your date needs to be a valid date between 01-01-1900 and 12-12-2099 formatted like dd-mm-yyyy.\r\n                    </FormFeedback>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button outline color=\"danger\" type='submitForm' onClick={this.submitForm}>Save Changes</Button>{' '}\r\n              <Button outline color=\"danger\" onClick={this.resetProperties}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    movies: state.movies\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditMovieModal)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deleteMovie } from '../actions'\r\nimport {\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    ModalFooter\r\n} from 'reactstrap';\r\n\r\nclass DeleteMovieModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false\r\n        };\r\n    }\r\n\r\n    deleteThisMovie =()=>{\r\n        const { dispatch, movies } = this.props;\r\n        const index = movies.findIndex(m => m.id === this.props.id);\r\n        dispatch(deleteMovie(index));\r\n        this.toggle()\r\n    }\r\n\r\n    toggle=()=> {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline color=\"danger\" onClick={this.toggle}>Delete Movie</Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle} >\r\n                    <ModalHeader toggle={this.toggle} className = 'delete-modal'>Delete Movie</ModalHeader>\r\n                    <ModalBody className = 'delete-modal'>\r\n                        Are you sure you would like to delete this movie? This action cannot be undone unless you are good friends with the site admin!\r\n              </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button outline color=\"danger\" onClick={this.toggle}>Cancel This Action</Button>{' '}\r\n                        <Button outline color=\"danger\" onClick={this.deleteThisMovie}>Proceed Anyway And Delete Movie</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        movies: state.movies\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DeleteMovieModal)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle\r\n} from 'reactstrap'\r\nimport EditMovieModal from './EditModal'\r\nimport DeleteMovieModal from './DeleteModal'\r\nclass MovieCard extends Component {\r\n    displayTitle=(movieTitle)=>{\r\n        let title = movieTitle.toLowerCase()\r\n        let firstLetter = /(^|[^a-z])[a-z]/g\r\n        let capitalizeFirstLetter = title.replace(firstLetter, this.upperCase)\r\n        console.log(capitalizeFirstLetter)\r\n        let replaceUnwantedCharacters =  capitalizeFirstLetter.replace(/([^\\sa-zA-Z])/g, '')\r\n        console.log(replaceUnwantedCharacters)\r\n        return replaceUnwantedCharacters\r\n    }\r\n    upperCase=(str)=>{\r\n        return str.toUpperCase()\r\n    }\r\n\r\n    render() {\r\n        const image = 'https://i.imgur.com/coUQtBy.jpg'\r\n        const movie = this.props.movies.find(m => m.id === this.props.id);\r\n        return (\r\n            <Card>\r\n                <CardImg top width=\"100%\" src={movie.Image|| image} alt=\"Card image cap\" />\r\n                <CardBody>\r\n                    <CardTitle><span>Title:</span> {this.displayTitle(movie.Title)}</CardTitle>\r\n                    <CardSubtitle><span>Released:</span> {movie.Year}</CardSubtitle>\r\n                    <CardText> <span> Genre:</span> {movie.Genre}<br/>  <span> Runtime:</span> {movie.Runtime}<br/> <span> Director:</span> {movie.Director}</CardText>\r\n                    <EditMovieModal movie={movie} key={movie.id} />\r\n                    <DeleteMovieModal id={movie.id}/>\r\n                </CardBody>\r\n            </Card>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        movies: state.movies\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = { fetchMovieList }\r\n\r\nexport default connect(mapStateToProps)(MovieCard)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchMovieList } from '../actions'\r\nimport MovieCard from '../components/MovieCard'\r\nimport { Container, CardDeck } from 'reactstrap'\r\nclass Movies extends Component {\r\n\r\n    componentDidMount = () => {\r\n        const { dispatch, movies } = this.props;\r\n        dispatch(fetchMovieList(movies));\r\n    }\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <CardDeck>\r\n                    {this.props.movies.filter(movie=> movie.status).map((movie) =>\r\n                        <MovieCard key={movie.id} id={movie.id}/>)}\r\n                </CardDeck>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        movies: state.movies\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = { fetchMovieList }\r\n\r\nexport default connect(mapStateToProps)(Movies)","import React, { Component } from 'react'\r\nimport '../containers/App.css'\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption, Button\r\n} from 'reactstrap'\r\n\r\nconst items = [\r\n  {\r\n    src: 'https://i.imgur.com/coUQtBy.jpg',\r\n    altText: '',\r\n    caption: 'Create Your Movie List'\r\n  },\r\n  {\r\n    src:'https://throughthepanes.files.wordpress.com/2012/10/netflix-movie-info.png',\r\n    altText: '',\r\n    caption: 'Edit Movies On Your List'\r\n  },\r\n  {\r\n    src: 'https://i.imgur.com/JrSiM.jpg',\r\n    altText: '',\r\n    caption: 'Add Movies To Your List'\r\n  }\r\n];\r\n\r\nclass DisplayCarousel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeIndex: 0 };\r\n  }\r\n\r\n  onExiting =()=> {\r\n    this.animating = true;\r\n  }\r\n\r\n  onExited =()=>{\r\n    this.animating = false;\r\n  }\r\n\r\n  next =()=>{\r\n    if (this.animating) return;\r\n    const nextIndex = this.state.activeIndex === items.length - 1 ? 0 : this.state.activeIndex + 1;\r\n    this.setState({ activeIndex: nextIndex });\r\n  }\r\n\r\n  previous =()=> {\r\n    if (this.animating) return;\r\n    const nextIndex = this.state.activeIndex === 0 ? items.length - 1 : this.state.activeIndex - 1;\r\n    this.setState({ activeIndex: nextIndex });\r\n  }\r\n\r\n  goToIndex =(newIndex)=> {\r\n    if (this.animating) return;\r\n    this.setState({ activeIndex: newIndex });\r\n  }\r\n\r\n  render() {\r\n    const { activeIndex } = this.state;\r\n    const slides = items.map((item) => {\r\n      return (\r\n        <CarouselItem\r\n          onExiting={this.onExiting}\r\n          onExited={this.onExited}\r\n          key={item.src}\r\n        >\r\n          <img className=\"d-block w-100\" src={item.src} alt={item.altText} />\r\n          <CarouselCaption captionText={''} captionHeader={item.caption} />\r\n        </CarouselItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Carousel\r\n        activeIndex={activeIndex}\r\n        next={this.next}\r\n        previous={this.previous}\r\n      >\r\n        <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={this.goToIndex} />\r\n        {slides}\r\n        <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.previous} />\r\n        <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.next} />\r\n      </Carousel>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default DisplayCarousel;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addMovie } from '../actions'\r\nimport {\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    ModalFooter, Form, FormGroup, FormFeedback,\r\n    Label, Input, Row, Col\r\n} from 'reactstrap';\r\n\r\nclass AddMovieModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initialState = {\r\n            modal: false,\r\n            title: '',\r\n            director: '',\r\n            runtime: '',\r\n            date: '',\r\n            genre: '',\r\n            validate: {\r\n                titleState: '',\r\n                runtimeState: '',\r\n                genreState: '',\r\n                directorState: '',\r\n                dateState: ''\r\n            }\r\n        };\r\n        this.state = JSON.parse(JSON.stringify(this.initialState))\r\n    }\r\n    validateInputs=(e, regexToValidate, validateItem)=> {\r\n        const { validate } = this.state\r\n        if (regexToValidate.test(e.target.value)) {\r\n            validate[validateItem] = 'has-success'\r\n        } else {\r\n            validate[validateItem] = 'has-danger'\r\n        }\r\n        this.setState({ validate })\r\n    }\r\n\r\n    validateTitle=(e, regexToValidate, validateItem)=>{\r\n        if(this.noDuplicateTitle(e.target.value)){\r\n            this.validateInputs(e, regexToValidate, validateItem)\r\n        }else{\r\n            const { validate } = this.state\r\n            validate[validateItem] = 'has-danger'\r\n            this.setState({ validate })\r\n        }\r\n    }\r\n\r\n    handleChange = async (event) => {\r\n        const { target } = event;\r\n        const value = target.value;\r\n        const { name } = target;\r\n        await this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        if (this.areAllInputsValidated()) {\r\n            const { title, director, runtime, genre, date } = this.state;\r\n            let movie = {\r\n                Director: director,\r\n                Genre: genre,\r\n                Poster: 'https://i.imgur.com/coUQtBy.jpg',\r\n                Runtime: runtime,\r\n                Title: title,\r\n                Year: date,\r\n                status: false\r\n            }\r\n            const { dispatch, movies } = this.props;\r\n            const index = movies.length\r\n            dispatch(addMovie(movie, index));\r\n            this.resetProperties()\r\n            this.toggle()\r\n        }\r\n    }\r\n\r\n    noDuplicateTitle=(value)=>{\r\n        const index = this.props.movies.findIndex(m => m.Title === value);\r\n        if(index===-1)return true\r\n        return false\r\n    }\r\n\r\n    areAllInputsValidated = () => {\r\n        const { validate } = this.state\r\n        for (const prop in validate) {\r\n            if (validate[prop] !== 'has-success') {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n    resetProperties = async () => {\r\n        await this.setState(JSON.parse(JSON.stringify(this.initialState)))\r\n    }\r\n    render() {\r\n        const { title, director, runtime, genre, date } = this.state\r\n        const dateRegex = /^(0[1-9]|[12]\\d|3[01])-(0[1-9]|1[0-2])-(19|20)\\d{2}$/\r\n        return (\r\n            <div>\r\n                <Button outline color=\"danger\" size=\"lg\" block onClick={this.toggle}>Add Movie</Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle} >\r\n                    <ModalHeader toggle={this.toggle}>Add Movie</ModalHeader>\r\n                    <Form className=\"form\" onSubmit={(e) => this.submitForm(e)}>\r\n                        <ModalBody>\r\n\r\n                            <Row form>\r\n                                <Col md={6}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"movieTitle\">Title</Label>\r\n                                        <Input type=\"text\" name=\"title\" id=\"movieTitle\" value={title}\r\n                                            valid={this.state.validate.titleState === 'has-success'}\r\n                                            invalid={this.state.validate.titleState === 'has-danger'}\r\n                                            onChange={(e) => {\r\n                                                this.validateTitle(e, /[A-Za-z]/g, 'titleState')\r\n                                                this.handleChange(e)\r\n                                            }} />\r\n                                        <FormFeedback valid>\r\n                                            Your title is in the correct format.\r\n                                        </FormFeedback>\r\n                                        <FormFeedback invalid>\r\n                                            A valid title must: (1) Not be the exact same letters as an already existing title. (2) Only letters or numbers.\r\n                                        </FormFeedback>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"movieRuntime\">Runtime</Label>\r\n                                        <Input type=\"text\" name=\"runtime\" id=\"movieRuntime\" value={runtime}\r\n                                            valid={this.state.validate.runtimeState === 'has-success'}\r\n                                            invalid={this.state.validate.runtimeState === 'has-danger'}\r\n                                            onChange={(e) => {\r\n                                                this.validateInputs(e, /^\\d{1,3}\\smin$/, 'runtimeState')\r\n                                                this.handleChange(e)\r\n                                            }} />\r\n                                        <FormFeedback valid>\r\n                                            Your runtime is in the correct format.\r\n                                        </FormFeedback>\r\n                                        <FormFeedback invalid>\r\n                                            Your runtime must be a number followed by a space and the letters 'min'.\r\n                                        </FormFeedback>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row form>\r\n                                <Col md={6}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"movieDirector\">Director</Label>\r\n                                        <Input type=\"text\" name=\"director\" id=\"movieDirector\" value={director}\r\n                                            valid={this.state.validate.directorState === 'has-success'}\r\n                                            invalid={this.state.validate.directorState === 'has-danger'}\r\n                                            onChange={(e) => {\r\n                                                this.validateInputs(e, /[A-Za-z]/g, 'directorState')\r\n                                                this.handleChange(e)\r\n                                            }} />\r\n                                        <FormFeedback valid>\r\n                                            Your director is in the correct format.\r\n                                        </FormFeedback>\r\n                                        <FormFeedback invalid>\r\n                                            Your director contains no letters and is therefore invalid.\r\n                                        </FormFeedback>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"movieGenre\">Genre</Label>\r\n                                        <Input type=\"text\" name=\"genre\" id=\"movieGenre\" value={genre}\r\n                                            valid={this.state.validate.genreState === 'has-success'}\r\n                                            invalid={this.state.validate.genreState === 'has-danger'}\r\n                                            onChange={(e) => {\r\n                                                this.validateInputs(e, /[A-Za-z]/g, 'genreState')\r\n                                                this.handleChange(e)\r\n                                            }} />\r\n                                        <FormFeedback valid>\r\n                                            Your genre is in the correct format.\r\n                                        </FormFeedback>\r\n                                        <FormFeedback invalid>\r\n                                            Your genre contains no letters and is therefore invalid.\r\n                                        </FormFeedback>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row form>\r\n                                <Col md={12}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"movieDate\">Released</Label>\r\n                                        <Input type=\"text\" name=\"date\" id=\"movieDate\" value={date}\r\n                                            valid={this.state.validate.dateState === 'has-success'}\r\n                                            invalid={this.state.validate.dateState === 'has-danger'}\r\n                                            onChange={(e) => {\r\n                                                this.validateInputs(e, dateRegex, 'dateState')\r\n                                                this.handleChange(e)\r\n                                            }} />\r\n                                        <FormFeedback valid>\r\n                                            Your date is in the correct format.\r\n                                        </FormFeedback>\r\n                                        <FormFeedback invalid>\r\n                                            Your date needs to be a valid date between 01-01-1900 and 12-12-2099 formatted like dd-mm-yyyy.\r\n                                        </FormFeedback>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button outline color=\"danger\" type='submitForm' onClick={this.submitForm}>Save Changes</Button>{' '}\r\n                            <Button outline color=\"danger\" onClick={this.resetProperties}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        movies: state.movies\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddMovieModal)","import React, { Component } from 'react'\nimport Movies from './movies'\nimport './App.css'\nimport DisplayCarousel from '../components/Carousel'\nimport AddMovieModal from '../components/AddModal'\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <DisplayCarousel/>\n        <AddMovieModal/>\n        <Movies/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers, bindActionCreators } from 'redux'\r\nimport { RECEIVE_MOVIE, REQUEST_MOVIE, EDIT_MOVIE, DELETE_MOVIE, ADD_MOVIE } from '../constants/ActionTypes'\r\nlet idCounter = 0;\r\nconst initialState = {\r\n    movies: ['a', 'b', 'c']\r\n}\r\n// , 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'\r\n\r\nconst movies = (state = initialState.movies, action = initialState.action) => {\r\n    switch (action.type) {\r\n        case RECEIVE_MOVIE:\r\n        let { Title, Year, Runtime, Genre, Director, Poster } = action.movie;\r\n            let updateArray = { Title: Title, Year: Year, Runtime: Runtime, Genre: Genre, Director: Director, id: idCounter++, Image: Poster, status: true };\r\n            return [\r\n                ...state.slice(0, action.index), updateArray, ...state.slice(action.index + 1)\r\n            ]\r\n        case REQUEST_MOVIE:\r\n            let update = { Title: action.movieTitle, index: action.index, status: false }\r\n            return [\r\n                ...state.slice(0, action.index), update, ...state.slice(action.index + 1)\r\n            ]\r\n        case EDIT_MOVIE:\r\n            return [\r\n                ...state.slice(0, action.index), action.movie, ...state.slice(action.index + 1)\r\n            ]\r\n        case DELETE_MOVIE:\r\n            return [\r\n                ...state.slice(0, action.index), ...state.slice(action.index + 1)\r\n            ]\r\n        case ADD_MOVIE:\r\n        let {movie} = action\r\n        let addToArray = { Title: movie.Title, Year: movie.Year, Runtime: movie.Runtime, Genre: movie.Genre, Director: movie.Director, id: idCounter++, Image: movie.Poster, status: true };\r\n            return [\r\n                ...state, addToArray \r\n            ]\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    movies\r\n})\r\nexport default rootReducer","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './containers/App'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport reducer from './reducers'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst middleware = [thunk]\nif (process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger())\n}\n\nconst store = createStore(\n    reducer, composeWithDevTools(\n        applyMiddleware(...middleware))\n)\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n     document.getElementById('root'));\n"],"sourceRoot":""}